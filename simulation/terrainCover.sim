import static oms3.SimBuilder.instance as OMS3
def home = oms_prj

// start and end date of the simulation
def startDate	= 	"2004-01-17 00:00"
def endDate		=	"2004-01-31 23:00"
def ID=1
def timestep=60

OMS3.sim {

resource "$oms_prj/lib"
model(while: "readerData.doProcess" ) {
	components {    
		"readerData"						"org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorReader"
 		//"vreaderStation"					"org.jgrasstools.gears.io.shapefile.OmsShapefileFeatureReader"
        "coverage"							"VegetationTools.terrainCover"
        "writerLai"							"org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorWriter" 
        "writerArea"						"org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorWriter" 
        }
        parameter{   
        	// parameter of the reader components 
        	"readerData.file"				"${home}/data/timeseries.csv"  
        	"readerData.idfield"			"ID"  
        	"readerData.tStart"        		"${startDate}"
        	"readerData.tEnd"          		"${endDate}"
        	"readerData.tTimestep"  		"${timestep}"
        	"readerData.fileNovalue"   		"-9999"
        	
        	"coverage.inFolder"				"${home}/data/LaiMap_cut"        
        	"coverage.dataType"				"tif"  // specify the number of ID: i.e. _4.tif
        	"coverage.scaleFactor"			0.1
        	//"coverage.outputPath"			"output/";

       
        	// parameter of the writing component    
           	"writerLai.file"				"${home}/output/meanLAI.csv" 
        	"writerLai.tStart"				"${startDate}"
        	"writerLai.tTimestep"			"${timestep}"
        	"writerLai.fileNovalue"			"-9999"        	
        	
        	"writerArea.file"				"${home}/output/vegetatedArea.csv" 
        	"writerArea.tStart"				"${startDate}"
        	"writerArea.tTimestep"			"${timestep}"
        	"writerArea.fileNovalue"		"-9999"        	          

        	}
        	connect {        
        		"readerData.tCurrent"			"coverage.tCurrent"          
        		"coverage.outValueMeanLai"		"writerLai.inData"
        		"coverage.outValueVegetatedArea""writerArea.inData"
        		}
        	}
       }
       
       
       /*package VegetationToolsTest;

import java.util.HashMap;

import org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorReader;
import org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorWriter;
import org.junit.Test;
import VegetationTools.terrainCover;


public class terrainCoverTest {
	@Test
	public void test() throws Exception {	
		
		OmsTimeSeriesIteratorReader reader = new OmsTimeSeriesIteratorReader();
		reader.file ="resources/Input/timeseries.csv";
		reader.idfield = "ID";
		reader.tStart = "2004-01-17 00:00";
		reader.tTimestep = 60;
		reader.tEnd = "2004-01-31 23:00";
		reader.fileNovalue = "-9999";

		reader.initProcess();
	
		terrainCover coverage= new terrainCover();
	
		coverage.inFolder="resources/Input/LaiMap_cut";
		//centroids.referenceSystem = CRS.decode("EPSG:31256");
		
		OmsTimeSeriesIteratorWriter writerLai = new OmsTimeSeriesIteratorWriter();
		writerLai.file = "resources/Output/meanLAI.csv ";
		writerLai.tStart = reader.tStart;
		writerLai.tTimestep = reader.tTimestep;
		
		OmsTimeSeriesIteratorWriter writerArea = new OmsTimeSeriesIteratorWriter();
		writerArea.file = "resources/Output/vegetatedArea.csv ";
		writerArea.tStart = reader.tStart;
		writerArea.tTimestep = reader.tTimestep;
		
		while( reader.doProcess ) {
			reader.nextRecord();
			
			coverage.tCurrent=reader.tCurrent;
			coverage.inputDataType="_4.tif";
			coverage.scaleFactor=0.1;
			coverage.outputPath ="/home/drugo/eclipse-workspace/CentroidsGenerator/resources/Output/LAI";
		
			coverage.process();
			
			HashMap<Integer, double[]> Lai = coverage.outValueMeanLai;
			writerLai.inData = Lai;
			writerLai.writeNextLine();
			
			HashMap<Integer, double[]> Area = coverage.outValueVegetatedArea;
			writerArea.inData = Area;
			writerArea.writeNextLine();

		}		
		reader.close();
		writerLai.close();
		writerArea.close();
	}
}*/
